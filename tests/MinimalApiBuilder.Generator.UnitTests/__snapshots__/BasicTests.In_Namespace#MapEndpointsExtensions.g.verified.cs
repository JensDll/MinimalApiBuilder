//HintName: MapEndpointsExtensions.g.cs
// <auto-generated>
// This is a MinimalApiBuilder source generated file.
// </auto-generated>

#nullable enable

namespace MinimalApiBuilder
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
    internal static class MapEndpointsExtensions
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder Map<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.Map(endpoints, pattern, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder MapMethods<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::System.Collections.Generic.IEnumerable<string> httpMethods, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapMethods(endpoints, pattern, httpMethods, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder MapGet<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapGet(endpoints, pattern, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder MapPost<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPost(endpoints, pattern, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder MapPut<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPut(endpoints, pattern, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder MapDelete<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapDelete(endpoints, pattern, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder MapPatch<TEndpoint>(this global::Microsoft.AspNetCore.Routing.IEndpointRouteBuilder endpoints, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("Route")] string pattern, global::MyNamespace.E? _ = default) where TEndpoint : global::MyNamespace.E
        {
            global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder = global::Microsoft.AspNetCore.Builder.EndpointRouteBuilderExtensions.MapPatch(endpoints, pattern, global::MyNamespace.E.Handle);
            global::MyNamespace.E._auto_generated_Configure(builder);
            global::MyNamespace.E.Configure(builder);
            return builder;
        }
    }
}
