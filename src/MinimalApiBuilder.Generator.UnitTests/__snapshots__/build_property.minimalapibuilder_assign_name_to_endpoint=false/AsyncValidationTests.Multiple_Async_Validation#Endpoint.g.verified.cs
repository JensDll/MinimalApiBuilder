//HintName: Endpoint.g.cs
// <auto-generated>
// This is a MinimalApiBuilder source generated file.
// </auto-generated>

#nullable enable

namespace Features
{
    public partial class Endpoint1 : global::MinimalApiBuilder.IEndpoint
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static global::System.Delegate _auto_generated_Handler { get; } = Handle;
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MinimalApiBuilder.Generator", "1.0.0.0")]
        public static void _auto_generated_Configure(global::Microsoft.AspNetCore.Builder.RouteHandlerBuilder builder)
        {
            global::Microsoft.AspNetCore.Http.EndpointFilterExtensions.AddEndpointFilter(builder, static async (invocationContext, next) =>
            {
                global::Features.Endpoint1 endpoint = invocationContext.GetArgument<global::Features.Endpoint1>(0);
                global::FluentValidation.Results.ValidationResult[] results = await global::System.Threading.Tasks.Task.WhenAll(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::FluentValidation.IValidator<global::Features.Request>>(invocationContext.HttpContext.RequestServices).ValidateAsync(invocationContext.GetArgument<global::Features.Request>(1)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::FluentValidation.IValidator<global::Features.Request>>(invocationContext.HttpContext.RequestServices).ValidateAsync(invocationContext.GetArgument<global::Features.Request>(2)));
                return global::System.Linq.Enumerable.Any(results, static result => !result.IsValid) ? global::MinimalApiBuilder.IEndpoint.GetErrorResult(endpoint, results) : await next(invocationContext);
            });
        }
    }
}
